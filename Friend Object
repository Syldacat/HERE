package HERE;

//The basic Friend class is the main method we will be manipulating.
//It contains information on each person who is in the party and 
public class Friend {
	
	private String uniqueID;
	
	//These are the important fields which must be initialized in each
	//and every person object.  If they are not then we have a problem.
	private String firstName;
	private String lastName;
	private char gender;
	
	//These are the fields that are required by the file for
	private boolean attending;
	private int guests;
	
	//Descriptive Fields
	private String note;
	private boolean tag1;
	private boolean tag2;
	private boolean tag3;

	/*
	 * Basic Constructor.  Instantiates the variables for the main three vital fields and then push
	 * everything else to be empty and/or false.
	 */
	public Friend(String uniqueID, String firstName, String lastName, char gender)
	{
		setUniqueID(uniqueID);
		setFirstName(firstName);
		setLastName(lastName);
		setGender(gender);
		
		setAttending(Boolean.FALSE);
		setGuests(0);
		
		setNote("");
		setTag1(Boolean.FALSE);
		setTag2(Boolean.FALSE);
		setTag3(Boolean.FALSE);
	}
	
	
	/*
	 * Full Constructor.  A constructor with a field for absolutely 
	 */
	public Friend(String uniqueID, String firstName, String lastName, char gender, boolean attending, int guests, String note, 
			boolean tag1,boolean tag2, boolean tag3)
	{
		setUniqueID(uniqueID);
		setFirstName(firstName);
		setLastName(lastName);
		setGender(gender);
		setAttending(attending);
		setGuests(guests);
		setNote(note);
		setTag1(tag1);
		setTag2(tag2);
		setTag3(tag3);
	}

/*
 * setUniqueID
 * Mutator method which sets the uniqueID of every Friend object.
 * @param uniqueID A unique method which is unique to every Friend object saved into memory. 
 * The format for it is #999999.  If it is not initiated properly than it will be saved as the default.
 */
	public void setUniqueID(String uniqueID)
	{	
		//Check to see if the uniqueID is the in the proper format aka with the first line being the 
		if (uniqueID.charAt(0) != '#' || uniqueID.trim().length() > 4)
			uniqueID = "#999";
		
		this.uniqueID = uniqueID;
	}

/*
 * getUniqueID
 * Accessor method which returns the uniqueID of every person.
 */
	public String getUniqueID()
	{
		return uniqueID;
	}
	
/*
 * setFirstName
 * Accesser method which sets the first name.  It also performs data validation so that the name of the person
 * is the same of always 
 * @param firstName The first name of the person.
 */
	public void setFirstName(String firstName)
	{
		String frontEnd = Character.toString(firstName.charAt(0)).toUpperCase();
		
		String backEnd = firstName.substring(1);
		backEnd = backEnd.toLowerCase();
		
		firstName = frontEnd.concat(backEnd);
		this.firstName = firstName;
	}
	
	public String getFirstName()
	{
		return firstName;
	}
	
	public void setLastName(String lastName)
	{
		String frontEnd = Character.toString(lastName.charAt(0)).toLowerCase();
	
		String backEnd = lastName.substring(1);
		backEnd = backEnd.toLowerCase();
		
		lastName = frontEnd.concat(backEnd);
		this.lastName = lastName;
	}
	
	public String getLastName()
	{
		return lastName;
	}
	
	public void setGender(char gender)
	{
		gender = Character.toUpperCase(gender);
		this.gender = gender;
	}
	
	public char getGender()
	{
		return gender;
	}
	
	public void setAttending(boolean attending)
	{
		this.attending = attending;
	}
	
	public boolean isAttending()
	{
		return attending;
	}
	
	public void setGuests(int guests)
	{
		if (guests > 9)
			guests = 9;
		if (guests < 0)
			guests = 0;
		this.guests = guests;
	}
	
	public int getGuests()
	{
		return guests;
	}
	
	public void setNote(String note)
	{
		this.note = note;
	}
	
	public String getNote()
	{
		return note;
	}
	
	public void setTag1(boolean tag)
	{
		this.tag1 = tag;
	}
	
	public boolean getTat1()
	{
		return tag1;
	}
	
	public void setTag2(boolean tag)
	{
		this.tag2 = tag;
	}
	
	public boolean getTat2()
	{
		return tag2;
	}
	
	public void setTag3(boolean tag)
	{
		this.tag3 = tag;
	}
	
	public boolean getTat3()
	{
		return tag3;
	}
}
